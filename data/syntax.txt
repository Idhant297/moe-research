if
else
for
while
do
switch
case
break
continue
return
function
class
new
this
super
extends
implements
interface
abstract
static
const
let
var
import
export
default
try
catch
finally
throw
typeof
instanceof
delete
void
async
await
yield
=>
{}
[]
()
;
:
,
.
=
==
===
!=
!==
>
<
>=
<=
+
-
*
/
%
**
++
--
&&
||
!
&
|
^
~
<<
>>
>>>
...
?.
??
#
/* */
//
"
'
`
${}
\n
\t
\r
\b
\f
\
0x
0b
0o
NaN
Infinity
undefined
null
true
false
Array
Object
String
Number
Boolean
Date
Math
RegExp
Set
Map
Promise
Proxy
Reflect
Symbol
Error
TypeError
SyntaxError
ReferenceError
RangeError
URIError
EvalError
JSON
console
window
document
DOM
Node
Element
Event
addEventListener
querySelector
querySelectorAll
getElementById
getElementsByClassName
getElementsByTagName
appendChild
removeChild
createElement
innerHTML
textContent
style
classList
setAttribute
getAttribute
removeAttribute
fetch
XMLHttpRequest
Promise.resolve
Promise.reject
Promise.all
Promise.race
async function
await